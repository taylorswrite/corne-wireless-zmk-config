/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp LEFT_ALT  &kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y      &kp U          &kp I             &kp O    &kp P     &kp LEFT_CONTROL
&kp TAB       &kp A  &kp S  &kp D  &kp F  &kp G        &kp H      &kp J          &kp K             &kp L    &kp SEMI  &kp SQT
&kp LSHIFT    &kp Z  &kp X  &kp C  &kp V  &kp B        &kp N      &kp M          &kp COMMA         &kp DOT  &kp FSLH  &kp ESC
                            &mo 1  &mo 2  &kp ENTER    &kp SPACE  &kp BACKSPACE  &kp LEFT_COMMAND
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8  &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&kp LSHFT   &kp F1        &kp F2        &kp F3        &trans        &tog 3          &trans    &trans    &trans  &trans     &trans  &trans
                                        &trans        &trans        &trans          &trans    &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp TAB    &kp EXCL       &kp AT         &kp HASH         &kp DLLR          &kp PRCNT       &kp CARET  &kp AMPS   &kp ASTRK      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BSPC
&kp LCTRL  &kp KP_PLUS    &kp KP_MINUS   &kp KP_MULTIPLY  &kp KP_DIVIDE     &kp KP_EQUAL    &kp MINUS  &kp EQUAL  &kp SLASH      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GRAVE
&kp LSHFT  &kp BACKSLASH  &kp LESS_THAN  &kp PIPE         &kp GREATER_THAN  &kp KP_EQUAL    &kp UNDER  &kp PLUS   &kp BACKSLASH  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp TILDE
                                         &trans           &trans            &trans          &trans     &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&kp LALT   &kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y      &kp U     &kp I      &kp O    &kp P     &kp LEFT_META
&kp TAB    &kp A  &kp S  &kp D  &kp F  &kp G        &kp H      &kp J     &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B        &kp N      &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &mo 1  &mo 2  &kp LCTRL    &kp SPACE  &kp BSPC  &kp ENTER
            >;
        };
    };
};
